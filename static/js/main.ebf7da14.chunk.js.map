{"version":3,"sources":["components/Quote.jsx","components/Author.jsx","components/Content.jsx","components/Button.jsx","components/Quotelist.jsx","components/Header.jsx","components/MainHeader.jsx","App.js","index.js"],"names":["Quote","props","className","quoteText","Author","useState","hover","setHover","style","background","cursor","onMouseEnter","onMouseLeave","onClick","setShow","color","quoteAuthor","quoteGenre","Content","data","Button","clicked","clickHandler","text","icon","Quotelist","setData","url","author","urlParam","useEffect","getQuotes","a","fetch","res","json","quoteData","map","quote","index","showBtn","setUrlParam","setShowBtn","Header","justifyContent","show","setDisplay","MainHeader","count","setCount","initialState","moreBtnState","setMoreBtnState","getRandomQuote","Fragment","prev","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebf7da14.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Quote.css\";\r\n\r\nconst Quote = (props) => {\r\n  return (\r\n    <div className=\"quote\">\r\n      <p>{props.quoteText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React, { useState } from \"react\";\r\nimport \"./Author.css\";\r\n\r\nconst Author = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"quote-info-container\"\r\n      style={{ background: hover && \"#333333\", cursor: hover && \"pointer\" }}\r\n      onMouseEnter={() => {\r\n        setHover(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setHover(false);\r\n      }}\r\n      onClick={() => props.setShow(false)}\r\n    >\r\n      <div>\r\n        <h4 className=\"author\" style={{ color: hover && \"#F2F2F2\" }}>\r\n          {props.quoteAuthor}\r\n        </h4>\r\n        <p className=\"genre\">{props.quoteGenre}</p>\r\n      </div>\r\n      {hover && (\r\n        <div className=\"arrow\">\r\n          <span className=\"material-icons\">arrow_right_alt</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","import React from \"react\";\r\nimport Quote from \"./Quote\";\r\nimport Author from \"./Author\";\r\nimport \"./Content.css\";\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <main className=\"main-content\">\r\n      <div className=\"quote-container\">\r\n        <Quote quoteText={props.data.quoteText} />\r\n        <Author\r\n          setShow={props.setShow}\r\n          quoteAuthor={props.data.quoteAuthor}\r\n          quoteGenre={props.data.quoteGenre}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div\r\n      className=\"btn-container\"\r\n      onClick={props.clicked ? () => props.clickHandler() : null}\r\n    >\r\n      <button className=\"btn\">{props.text}</button>\r\n      <span className=\"material-icons\">{props.icon}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Quote from \"./Quote\";\r\nimport Button from \"./Button\";\r\nimport \"./Quotelist.css\";\r\n\r\nconst Quotelist = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const url = `https://quote-garden.herokuapp.com/api/v3/quotes?author=${props.author}${props.urlParam}`;\r\n\r\n  useEffect(() => {\r\n    const getQuotes = async () => {\r\n      const res = await fetch(url);\r\n      const quoteData = await res.json();\r\n      setData(quoteData.data);\r\n    };\r\n    getQuotes();\r\n  }, [url]);\r\n\r\n  function setUrl() {\r\n    props.setUrlParam(\"\");\r\n    props.setShowBtn(false);\r\n  }\r\n\r\n  return (\r\n    <main className=\"quotelist\">\r\n      <h1 className=\"quotelist-author\">{props.author}</h1>\r\n      <div className=\"quotelist-container\">\r\n        {data.map((quote, index) => {\r\n          return <Quote key={index} quoteText={quote.quoteText} />;\r\n        })}\r\n      </div>\r\n      {props.showBtn && (\r\n        <div className=\"more-btn\">\r\n          <Button text=\"more quotes\" clicked={true} clickHandler={setUrl} />\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Quotelist;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header\r\n      style={{ justifyContent: !props.show ? \"space-between\" : \"flex-end\" }}\r\n    >\r\n      {!props.show && (\r\n        <Button text=\"back\" clicked={true} clickHandler={props.setDisplay} />\r\n      )}\r\n      <Button\r\n        clicked={props.clicked}\r\n        clickHandler={props.clickHandler}\r\n        text={props.text}\r\n        icon={props.icon}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Content from \"./Content\";\r\nimport Quotelist from \"./Quotelist\";\r\nimport Header from \"./Header\";\r\n\r\nfunction MainHeader() {\r\n  const [show, setShow] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const initialState = \"&limit=6\";\r\n  const url = \"https://quote-garden.herokuapp.com/api/v3/quotes/random\";\r\n  const [urlParam, setUrlParam] = useState(initialState);\r\n  const [moreBtnState, setMoreBtnState] = useState(true);\r\n\r\n  const getRandomQuote = async () => {\r\n    const res = await fetch(url);\r\n    const quoteData = await res.json();\r\n    setData(quoteData.data[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRandomQuote();\r\n  }, [count]);\r\n\r\n  function handler() {\r\n    setCount((prev) => prev + 1);\r\n    setUrlParam(initialState);\r\n    setMoreBtnState(true);\r\n  }\r\n\r\n  function display() {\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header\r\n        clicked={true}\r\n        clickHandler={handler}\r\n        text=\"random\"\r\n        icon=\"autorenew\"\r\n        show={show}\r\n        setDisplay={display}\r\n      />\r\n      {show && <Content setShow={setShow} data={data} />}\r\n      {!show && (\r\n        <Quotelist\r\n          author={data.quoteAuthor}\r\n          urlParam={urlParam}\r\n          setUrlParam={setUrlParam}\r\n          showBtn={moreBtnState}\r\n          setShowBtn={setMoreBtnState}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\nimport MainHeader from \"./components/MainHeader\";\nimport \"./App.css\";\n\nfunction App() {\n  return <MainHeader />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}